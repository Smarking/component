apply plugin: 'com.android.library'
apply plugin: 'com.pitaya.apicomponent'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'maven'

android {
    compileSdkVersion versions.compileSdkVersion
    buildToolsVersion versions.buildToolsVersion
    defaultConfig {
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.versionCode
        versionName versions.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        resourcePrefix "vippay_"

    }
    buildTypes {

        debug {
            buildConfigField "boolean", "ENV_OFFLINE", "true"
        }

        release {
            buildConfigField "boolean", "ENV_OFFLINE", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile deps.butterknife
    annotationProcessor deps.butterknifeCompiler

    compile deps.BaseRecyclerViewAdapterHelper
    compile deps.support.recyclerview

    compile project(path: deps.baselib)
    compile project(path: deps.commanager)

    provided project(path: deps.comprotocol)
}

/**
 * 执行以下命令，发布到指定仓库，比如customerPath
 *   ./gradlew :vippay:clean :vippay:uploadArchives --info  --stacktrace
 */

def publishedGroupId = 'com.pitaya.component'
def artifact = 'vippay'
def publishVersion = '0.0.1-SNAPSHOT'

uploadArchives {
    repositories.mavenDeployer {
        name = 'mavenCentralReleaseDeployer'
//        repository(url: "http://nexus:8081/nexus/content/repositories/releases") {  //配置仓库路径
//            authentication(userName: AAR_USER_NAME, password: AAR_USER_PASSWORD)
//        }

        snapshotRepository(url: "http://nexus:8081/nexus/content/repositories/snapshots") {
            authentication(userName: AAR_USER_NAME, password: AAR_USER_PASSWORD)
        }

        pom.groupId = publishedGroupId //对外发布的插件包名，具有唯一标示性，并且包含插件集合，
        // 每个插件的名字由文件 com.smarking.findviewbyid.properties名决定，文件内部配置该插件入口。见实例
        pom.artifactId = artifact
        pom.version = publishVersion
        pom.packaging = 'aar'
    }
}